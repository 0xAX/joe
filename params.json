{"name":"joe","tagline":"A .gitignore magician in your command line","body":"![](http://i.imgur.com/y8g506n.png?1)\r\n\r\n# joe\r\n\r\nA .gitignore magician in your command line. Joe generates `.gitignore` files from the command line for you.\r\n\r\n![](http://i.imgur.com/ghmJLUP.gif)\r\n\r\n## Features\r\n\r\n- Written in uncomplicated Python\r\n- Easy to [install](https://github.com/karan/joe#installation)\r\n- Stupidly [easy to use](https://github.com/karan/joe#usage)\r\n- Supports all Github-supported [`.gitignore` files](https://github.com/karan/joe#list-all-available-files)\r\n- Works on Mac, Linux and Windows\r\n\r\n## Installation\r\n\r\n### Option 1: Homebrew\r\n\r\n```bash\r\n$ brew update\r\n$ brew tap karan/karan\r\n$ brew install gitignore\r\n```\r\n\r\n### Option 2: [Pip](https://pypi.python.org/pypi/joe)\r\n\r\n```bash\r\n$ pip install joe\r\n```\r\n\r\n### Option 3: From source\r\n\r\n```bash\r\n$ git clone --recursive git@github.com:karan/joe.git\r\n$ cd joe/\r\n$ python setup.py install\r\n```\r\n\r\n## Usage\r\n\r\n### Basic usage\r\n\r\n\r\n```bash\r\n$ joe java    # outputs .gitignore file for java to stdout\r\n```\r\n\r\n### Overwrite existing `.gitignore` file\r\n\r\n```bash\r\n$ joe java > .gitignore    # saves a new .gitignore file for java\r\n```\r\n\r\n### Append to existing `.gitignore` file\r\n\r\n```bash\r\n$ joe java >> .gitignore    # appends new .gitignore file for java\r\n```\r\n\r\n### Multiple languages\r\n\r\n```bash\r\n$ joe java node python > .gitignore    # saves a new .gitignore file for multiple languages\r\n```\r\n\r\n### Create and append to a global .gitignore file\r\n\r\nYou can also use joe to append to a global .gitignore. These can be helpful when you want to ignore files generated by an IDE, OS, or otherwise.\r\n\r\n```bash\r\n$ git config --global core.excludesfile ~/.gitignore # Optional if you have not yet created a global .gitignore\r\n$ joe OSX SublimeText >> ~/.gitignore\r\n```\r\n\r\n### List all available files\r\n\r\n```bash\r\n$ joe ls\r\n\r\n# OR\r\n\r\n$ joe list\r\n```\r\n\r\nOutput:\r\n\r\n> actionscript, ada, agda, android, anjuta, appceleratortitanium, archives, archlinuxpackages, autotools, bricxcc, c, c++, cakephp, cfwheels, chefcookbook, clojure, cloud9, cmake, codeigniter, codekit, commonlisp, composer, concrete5, coq, craftcms, cvs, dart, darteditor, delphi, dm, dreamweaver, drupal, eagle, eclipse, eiffelstudio, elisp, elixir, emacs, ensime, episerver, erlang, espresso, expressionengine, extjs, fancy, finale, flexbuilder, forcedotcom, fortran, fuelphp, gcov, gitbook, go, gradle, grails, gwt, haskell, idris, igorpro, ipythonnotebook, java, jboss, jdeveloper, jekyll, jetbrains, joomla, jython, kate, kdevelop4, kohana, labview, laravel, lazarus, leiningen, lemonstand, libreoffice, lilypond, linux, lithium, lua, lyx, magento, matlab, maven, mercurial, mercury, metaprogrammingsystem, meteor, microsoftoffice, modelsim, momentics, monodevelop, nanoc, netbeans, nim, ninja, node, notepadpp, objective-c, ocaml, opa, opencart, oracleforms, osx, packer, perl, phalcon, playframework, plone, prestashop, processing, python, qooxdoo, qt, r, rails, redcar, redis, rhodesrhomobile, ros, ruby, rust, sass, sbt, scala, scons, scrivener, sdcc, seamgen, sketchup, slickedit, stella, sublimetext, sugarcrm, svn, swift, symfony, symphonycms, tags, tex, textmate, textpattern, tortoisegit, turbogears2, typo3, umbraco, unity, vagrant, vim, virtualenv, visualstudio, vvvv, waf, webmethods, windows, wordpress, xcode, xilinxise, xojo, yeoman, yii, zendframework, zephir\r\n\r\nPlease use the issue tracker to report any bugs or file feature requests.\r\n\r\n## Developing\r\n\r\nPRs are welcome. To begin developing, do this:\r\n\r\n```bash\r\n# make virtual env\r\n$ git clone --recursive git@github.com:karan/joe.git\r\n$ cd joe/\r\n$ python joe/joe.py java\r\n```\r\n\r\n#### `tool.sh`\r\n\r\nThis is a handly script that automates a lot of developing steps.\r\n\r\n\r\n```bash\r\nUSAGE:\r\n  $ tool.sh [-h|--help] COMMAND\r\n\r\nEXAMPLES:\r\n  $ tool.sh readme    Generate README.rst from README.md\r\n  $ tool.sh test      Upload release to testpypi\r\n  $ tool.sh prod      Upload release to prod pypi\r\n```\r\n\r\nMake sure you have a file `.pypirc` in `~/` in the following format:\r\n\r\n    [distutils]\r\n    index-servers =\r\n        pypi\r\n        pypitest\r\n\r\n    [pypi]\r\n    repository: https://pypi.python.org/pypi\r\n    username: <<>>\r\n    password: <<>>\r\n\r\n    [pypitest]\r\n    repository: https://testpypi.python.org/pypi\r\n    username: <<>>\r\n    password: <<>>\r\n","google":"UA-9509587-21","note":"Don't delete this file! It's used internally to help with page regeneration."}